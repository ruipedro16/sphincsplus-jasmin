from Sphincs require "avx2_utils/utils.jinc"

export fn mm256_set_epi32_jazz(reg u64 args) {
    reg u64 e0_ptr e1_ptr e2_ptr e3_ptr e4_ptr e5_ptr e6_ptr e7_ptr out_ptr;

    reg u32 e0 e1 e2 e3 e4 e5 e6 e7;
    reg u256 out;

    #declassify e0_ptr = (u64) [args + 8*0]; e0 = (u32) [e0_ptr];
    #declassify e1_ptr = (u64) [args + 8*1]; e1 = (u32) [e1_ptr];
    #declassify e2_ptr = (u64) [args + 8*2]; e2 = (u32) [e2_ptr];
    #declassify e3_ptr = (u64) [args + 8*3]; e3 = (u32) [e3_ptr];
    #declassify e4_ptr = (u64) [args + 8*4]; e4 = (u32) [e4_ptr];
    #declassify e5_ptr = (u64) [args + 8*5]; e5 = (u32) [e5_ptr];
    #declassify e6_ptr = (u64) [args + 8*6]; e6 = (u32) [e6_ptr];
    #declassify e7_ptr = (u64) [args + 8*7]; e7 = (u32) [e7_ptr];

    out_ptr = (u64) [args + 8*8];

    out = _mm256_set_epi32(e0, e1, e2, e3, e4, e5, e6, e7);

    (u256)[out_ptr] = out;
}

export fn mm256_set_epi64x_jazz(reg u64 e0 e1 e2 e3 res_ptr) {
    reg u256 res;

    res = _mm256_set_epi64x(e0, e1, e2, e3);

    (u256) [res_ptr] = res;
}