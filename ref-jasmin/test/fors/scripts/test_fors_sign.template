void test_fors_sign_<TEST_NUMBER>(void)
{
    <VARIABLES HERE>
    
    uint8_t sig_jazz[SPX_BYTES - SPX_N];
    uint8_t pk_jazz[SPX_FORS_PK_BYTES];

    memcpy(sig_jazz, sig_ref, SPX_BYTES - SPX_N);
    memcpy(pk_jazz, pk_ref, SPX_FORS_PK_BYTES);
    randombytes((uint8_t *)addr, 8 * sizeof(uint32_t));

    assert(memcmp(sig_ref, sig_jazz, SPX_BYTES - SPX_N) == 0);
    assert(memcmp(pk_ref, pk_jazz, SPX_FORS_PK_BYTES) == 0);

    fors_sign(sig_ref, pk_ref, mhash, &ctx, addr);
    fors_sign_jazz(sig_jazz, pk_jazz, mhash, ctx.pub_seed, ctx.sk_seed, addr);

    assert(memcmp(sig_ref, sig_jazz, SPX_BYTES - SPX_N) == 0);
    assert(memcmp(pk_ref, pk_jazz, SPX_FORS_PK_BYTES) == 0);
}
